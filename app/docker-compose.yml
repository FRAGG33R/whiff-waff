version: "3.1"
services:
  client:
    container_name: whiff-whaff-client
    image: node:lts-alpine
    working_dir: /app
    command: sh -c "npm i
                    && npm run build
                    && npm run start"
    volumes:
      - ./client/whiff-client:/app
    ports:
      - "3000-3100:3000-3100"
    restart: unless-stopped
    networks:
      - whiff-whaff
    depends_on:
      - server
    
  server:
    container_name: whiff-whaff-server
    image: node:lts-alpine
    working_dir: /app
    command: sh -c "npm i
                    && npx prisma migrate dev --name init
                    && npm run build
                    && npm run start"
    env_file: ./.env
    
    ports:
      - "4000:4000"
      - "8887:8887"
      - "8888:8888"
      - "8889:8889"
    volumes:
      - ./whiff-data:/var/lib/postgresql/data
      - ./server/whiff-whaff:/app
    networks:
      - whiff-whaff
    restart: unless-stopped
    depends_on:
      postgres:
        condition: "service_healthy"

  postgres:
    image: postgres:alpine
    container_name: whiff-whaff-db
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./whiff-data:/var/lib/postgresql/data

    networks:
      - whiff-whaff
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 30s
      timeout: 5s
      retries: 3

  
  # client:
  #   container_name: whiff-client
  #   build:
  #     context: .
  #     dockerfile: ./client/Dockerfile
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./whiff-data:/var/lib/postgresql/data
  #   networks:
  #     - whiff-whaff
  #   restart: unless-stopped
  #   depends_on:
  #     - server



networks:
  whiff-whaff: